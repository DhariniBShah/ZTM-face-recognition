{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahd\\\\OneDrive\\\\Desktop\\\\ZTM_WebBasics\\\\face-recognition-brain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/navigation/Navigation';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: '7f580a07a6434a7cb822ee913db81d99'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 400\n      }\n    },\n    size: {\n      value: 2\n    },\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 10\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifai_face = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.calculateFaceLocation(response)).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 8\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/shahd/OneDrive/Desktop/ZTM_WebBasics/face-recognition-brain/src/App.js"],"names":["React","Component","Particles","Navigation","ImageLinkForm","Rank","FaceRecognition","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","size","line_linked","shadow","color","blur","constructor","calculateFaceLocation","data","clarifai_face","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","onInputChange","event","setState","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","box","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Particles from 'react-particles-js';\n\nimport Navigation from './components/navigation/Navigation';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition'\n\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n  apiKey: '7f580a07a6434a7cb822ee913db81d99'\n});\n\nconst particlesOptions = {\n  particles: {\n    number:{\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 400\n      }\n    },\n    size:{\n      value: 2\n    },\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 10\n      }\n    }  \n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifai_face = data.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input })\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(\n        (response) => this.calculateFaceLocation(response)\n      ).catch(\n          err => console.log(err)\n      );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      <Particles\n        className = 'particles' \n        params={particlesOptions} \n      />\n       <Navigation />\n       <Rank />\n       <ImageLinkForm \n        onInputChange = {this.onInputChange} \n        onButtonSubmit = {this.onButtonSubmit}   \n        />  \n       <FaceRecognition imageUrl = {this.state.imageUrl} />\n      </div>\n    );\n  }  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}