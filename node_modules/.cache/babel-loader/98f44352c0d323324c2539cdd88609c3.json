{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahd\\\\OneDrive\\\\Desktop\\\\ZTM_WebBasics\\\\face-recognition\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/navigation/Navigation';\nimport SignIn from './components/signIn/SignIn';\nimport Register from './components/register/Register';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: '7f580a07a6434a7cb822ee913db81d99'\n});\nconst particlesJSON = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 50,\n      \"density\": {\n        \"enable\": true,\n        \"value_area\": 1000\n      }\n    },\n    \"color\": {\n      \"value\": [\"#03C8A8\", \"#89D8D3\", \"#74F2CE\", \"#e0fcf4\"]\n    },\n    \"shape\": {\n      \"type\": \"edge\",\n      \"stroke\": {\n        \"width\": 0,\n        \"color\": \"#fff\"\n      },\n      \"polygon\": {\n        \"nb_sides\": 5\n      }\n    },\n    \"opacity\": {\n      \"value\": 0.5,\n      \"random\": true,\n      \"anim\": {\n        \"enable\": true,\n        \"speed\": 1,\n        \"opacity_min\": 0.1,\n        \"sync\": false\n      }\n    },\n    \"size\": {\n      \"value\": 70,\n      \"random\": true,\n      \"anim\": {\n        \"enable\": false,\n        \"speed\": 1,\n        \"size_min\": 10,\n        \"sync\": false\n      }\n    },\n    \"line_linked\": {\n      \"enable\": false,\n      \"distance\": 100,\n      \"color\": \"#ffffff\",\n      \"opacity\": 0.5,\n      \"width\": 1\n    },\n    \"move\": {\n      \"enable\": true,\n      \"speed\": 2,\n      \"direction\": \"top\",\n      //none, top, top-right, right, bottom-right, bottom, bottom-left, left, top-left\n      \"random\": false,\n      \"straight\": false,\n      \"out_mode\": \"out\",\n      // out\n      \"attract\": {\n        \"enable\": true,\n        \"rotateX\": 1000,\n        \"rotateY\": 1000\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifai_face = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifai_face.left_col * width,\n        topRow: clarifai_face.top_row * height,\n        rightCol: width - clarifai_face.right_col * width,\n        bottomRow: height - clarifai_face.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      imageUrl,\n      route,\n      isSignedIn\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesJSON,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 8\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/shahd/OneDrive/Desktop/ZTM_WebBasics/face-recognition/src/App.js"],"names":["React","Component","Particles","Navigation","SignIn","Register","ImageLinkForm","Rank","FaceRecognition","Clarifai","app","App","apiKey","particlesJSON","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifai_face","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Particles from 'react-particles-js';\n\nimport Navigation from './components/navigation/Navigation';\nimport SignIn from './components/signIn/SignIn';\nimport Register from './components/register/Register';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition'\n\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n  apiKey: '7f580a07a6434a7cb822ee913db81d99'\n});\n\nconst particlesJSON =\n  {\n    \"particles\": {\n      \"number\": {\n        \"value\": 50,\n        \"density\": {\n          \"enable\": true,\n          \"value_area\": 1000\n        }\n      },\n      \"color\": {\n       \"value\" : [ \"#03C8A8\",\"#89D8D3\",\"#74F2CE\", \"#e0fcf4\"]\n      },\n      \"shape\": {\n        \"type\": \"edge\",\n        \"stroke\": {\n          \"width\": 0,\n          \"color\": \"#fff\"\n        },\n        \"polygon\": {\n          \"nb_sides\": 5\n        },\n      },\n      \"opacity\": {\n        \"value\": 0.5,\n        \"random\": true,\n        \"anim\": {\n          \"enable\": true, \n          \"speed\": 1,\n          \"opacity_min\": 0.1,\n          \"sync\": false\n        }\n      },\n      \"size\": {\n        \"value\": 70,\n        \"random\": true,\n        \"anim\": {\n          \"enable\": false,\n          \"speed\": 1,\n          \"size_min\": 10,\n          \"sync\": false\n        }\n      },\n      \"line_linked\": {\n        \"enable\": false,\n        \"distance\": 100,\n        \"color\": \"#ffffff\",\n        \"opacity\": 0.5,\n        \"width\": 1\n      },\n      \"move\": {\n        \"enable\": true,\n        \"speed\": 2,\n        \"direction\": \"top\", //none, top, top-right, right, bottom-right, bottom, bottom-left, left, top-left\n        \"random\": false,\n        \"straight\": false,\n        \"out_mode\": \"out\", // out\n        \"attract\": {\n          \"enable\": true,\n          \"rotateX\": 1000,\n          \"rotateY\": 1000\n        }\n      }\n    }\n  }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user : {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifai_face = data.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifai_face.left_col *  width,\n      topRow: clarifai_face.top_row *  height,\n      rightCol: width - (clarifai_face.right_col *  width),\n      bottomRow: height - (clarifai_face.bottom_row *  height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({ box: box })\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input })\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(\n        (response) => this.displayFaceBox(\n          this.calculateFaceLocation(response)\n      )).catch(\n          err => console.log(err)\n      );\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout') {\n      this.setState({ isSignedIn: false })\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route });    \n  }\n\n  render() {\n  \n    const { imageUrl, route, isSignedIn } = this.state;\n    return (\n      <div className=\"App\">\n      <Particles\n        className = 'particles' \n        params={particlesJSON} \n      />\n       <Navigation isSignedIn = { isSignedIn } onRouteChange = { this.onRouteChange } />\n       { \n          route === 'home' ?\n          <div>\n            <Rank name = { this.state.user.name } entries = { this.state.user.entries } /> \n            <ImageLinkForm \n              onInputChange = { this.onInputChange } \n              onButtonSubmit = { this.onButtonSubmit }   \n            />  \n            <FaceRecognition box = {this.state.box} imageUrl = {imageUrl} />\n          </div>\n            : (\n              route === 'signin' ?\n              <SignIn loadUser = { this.loadUser } onRouteChange = { this.onRouteChange }/> \n              :\n              <Register loadUser = { this.loadUser } onRouteChange = { this.onRouteChange }/> \n            ) \n       }\n      </div>\n    );\n  }  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}